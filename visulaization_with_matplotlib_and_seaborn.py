# -*- coding: utf-8 -*-
"""Visulaization_with_matplotlib_and_Seaborn.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1W6jzFMmt4vcQ5-RFIXLFW1s-xWiGNIRf
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

yeild_apples=[0.895,0.91,0.919,0.926,0.929,0.931]

plt.plot(yeild_apples);

years=range(2000,2006)

plt.plot(years,yeild_apples);

plt.plot(years,yeild_apples)
plt.xlabel('Years')
plt.ylabel('Yeild of apples in tons');

import random
years=range(2000,2011)
apples=[0.895,0.91,0.919,0.926,0.929,0.931,0.936,0.937,0.9375,0.9372,0.939]
Randomorranges=random.sample(range(80,100),11)
orranges=[x/100 for x in Randomorranges ]

orranges

len(apples)

plt.plot(years,apples)
plt.plot(years,orranges)

plt.xlabel('Years')
plt.ylabel('Yeild in tops per hectare')
plt.legend(['Apples','Orranges']);

plt.title("Crop yeild in Kanto")
plt.plot(years, apples)
plt.plot(years, orranges)
plt.xlabel('Years')
plt.ylabel('yeild in tons per hectare')
plt.legend(['apples','orranges']);

plt.plot(years, apples, marker='o')
plt.plot(years,orranges,marker='.')
plt.xlabel('Years')
plt.ylabel('Yeild in years')
plt.title('Crops yeild in Kanto')
plt.legend(['Apples','Orranges']);

plt.plot(years, apples, 'b--o')
plt.plot(years,orranges,'r--X')
plt.xlabel('Years')
plt.ylabel('Yeild in years')
plt.title('Crops yeild in Kanto')
plt.legend(['Apples','Orranges']);

plt.plot(years,apples,marker='o', color='b', ls='--',linewidth=3,markersize=5,alpha=0.4)
plt.plot(years,orranges,marker='X', color='r', ls='--', linewidth=3,markersize=5,alpha=0.8)
plt.xlabel('Years')
plt.ylabel('Yeild in years')
plt.title('Crops yeild in Kanto')
plt.legend(['Apples','Orranges']);

plt.plot(years,apples,'bX')
plt.plot(years,orranges,'rx')
plt.xlabel('Years')
plt.ylabel('Yeild in years')
plt.title('Crops yeild in Kanto')
plt.legend(['Apples','Orranges']);

plt.figure(figsize=(8,4))
plt.plot(years,apples,'r--X')
plt.plot(years,orranges,'y--o')
plt.xlabel('Years')
plt.ylabel('Yeild in years')
plt.title('Crops yeild in Kanto')
plt.legend(['Apples','Orranges']);

sns.set_style('whitegrid')

plt.plot(years,apples,'r--X')
plt.plot(years,orranges,'y--o')
plt.xlabel('years')
plt.ylabel('yeild of crops in tons per hectare')
plt.title('Crops in Kanto')
plt.legend(['Apples','Orranges']);

sns.set_style('darkgrid')

plt.plot(years,apples,'r--X')
plt.plot(years,orranges,'y--o')
plt.xlabel('years')
plt.ylabel('Yeild in tons per hectare')
plt.title('Crops in Kanto')
plt.legend(['apples','Orranges'])

matplotlib.rcParams['font.size']=14

import matplotlib
matplotlib.rcParams['font.size']=14
matplotlib.rcParams['figure.figsize']=(9,5)
matplotlib.rcParams['figure.facecolor']='#00000000'

plt.plot(years,apples,'r--X')
plt.plot(years,orranges,'y--o')
plt.xlabel('years')
plt.ylabel('Yeild in tons per hectare')
plt.title('Crops in Kanto')
plt.legend(['apples','Orranges']);

flowers_df=sns.load_dataset('iris')

flowers_df.sample(10)

flowers_df.species.unique()

flower_sample_df=flowers_df.groupby('species')[['sepal_length','sepal_width']].mean()
flower_sample_df

flower_sample_df.plot(kind='bar')

flowers_df.species.unique()

plt.plot(flowers_df.sepal_length, flowers_df.sepal_width);

sns.scatterplot(x=flowers_df.sepal_length, y=flowers_df.sepal_width);

sns.scatterplot(x=flowers_df.sepal_length, y=flowers_df.sepal_width, hue=flowers_df.species, s=100)

plt.title("sepal dimensions")
sns.scatterplot(x='sepal_length',
                y='sepal_width',
                hue='species',
                s=100,
                data=flowers_df);

plt.title('Distributon of sepal width')
plt.hist(flowers_df.sepal_width);

plt.hist(flowers_df.sepal_width, bins=5);

import numpy as np
plt.hist(flowers_df.sepal_width, bins=np.arange(2,5,0.25));

# Bins of unequal sizes
plt.hist(flowers_df.sepal_width, bins=[1, 2.5, 4, 4.5]);

#Multiple Histograms
setosa_df=flowers_df[flowers_df.species=='setosa']
versicolor_df=flowers_df[flowers_df.species=='versicolor']
virginica_df=flowers_df[flowers_df.species=='verginica']

plt.hist(versicolor_df.sepal_length, alpha=0.4 )
#plt.hist(virginica_df.sepal_length, alpha=0.6)
plt.hist(setosa_df.sepal_length, alpha=0.8, bins=np.arange(2,5,0.25))
plt.legend(['versicolor','setosa'])

virginica_df.describe()

virginica_df.sepal_length.describe()

plt.hist(versicolor_df.sepal_width, alpha=0.4, bins=np.arange(1,5,0.25));
plt.hist(setosa_df.sepal_width, alpha=0.6, bins=np.arange(1,5,0.25));
plt.legend(['versicolor','setosa']);

sns.set_style('whitegrid')

plt.hist(versicolor_df.sepal_width, alpha=0.4, bins=np.arange(1,5,0.25));
plt.hist(setosa_df.sepal_width, alpha=0.6, bins=np.arange(1,5,0.25));
plt.legend(['versicolor','setosa']);

## Stacking multiple histograms on top of each other
plt.title('Distribution of sepal width')
plt.hist([setosa_df.sepal_width, virginica_df.sepal_width,versicolor_df.sepal_width], alpha=0.8, bins=np.arange(2,5,0.25),
         stacked=True);
plt.legend(['setosa','virginica','versicolor']);

virginica_df.sepal_width.describe()

plt.title('Distribution of Sepal Width')

plt.hist([setosa_df.sepal_width, versicolor_df.sepal_width, virginica_df.sepal_width],
         bins=np.arange(2, 5, 0.25),
         stacked=True);

plt.legend(['Setosa', 'Versicolor', 'Virginica']);

years= range(2000,2006)
apples=[0.35,0.6,0.9,0.8,0.65,0.8]
oranges=[0.4,0.8,0.9,0.7,0.6,0.8]
plt.bar(years,apples)

plt.bar(years,oranges)
plt.plot(years, oranges, '--X', c='#FFA500', markersize=10)

#stacking bar plots
plt.bar(years,apples, label='Apples')
plt.bar(years,oranges, label='Oranges', bottom=oranges);
plt.legend();

tips_df=sns.load_dataset('tips')

tips_df

avg_tips_per_day=tips_df.groupby('day')['total_bill'].mean()

avg_tips_per_day.info()

avg_tips_per_day

plt.bar(avg_tips_per_day.index, avg_tips_per_day.values);

sns.barplot(x='day',y='total_bill', data=tips_df);

sns.barplot(x='day',y='total_bill', hue='sex', data=tips_df);

sns.barplot(x='total_bill',y='day', hue='smoker', data=tips_df
            )

flights_df = sns.load_dataset("flights")

flights_df

flights_df.pivot('month','years','passengers')

flights_matrix_df=flights_df.pivot(index='month', columns='year', values='passengers')

plt.title("No of passengers ")
sns.heatmap(flights_matrix_df)

plt.figure(figsize=(4,4))

sns.heatmap(flights_matrix_df);

# printing the actual values using annot
fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='Blues', fmt='g');

fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='plasma', fmt='g');

fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='viridis', fmt='g');

fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='tab20c', fmt='g');

fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='flag', fmt='g');

fig, ax = plt.subplots(figsize=(13, 8))
sns.heatmap(flights_matrix_df, annot=True, cmap='rainbow', fmt='g');

## images
from urllib.request import urlretrieve

urlretrieve('https://th.bing.com/th/id/R.bec9cc8b9cdbe891f18888067f36b5ab?rik=3%2fycEAeK1lr6Og&riu=http%3a%2f%2fgetwallpapers.com%2fwallpaper%2ffull%2f6%2fd%2f0%2f868430-download-free-cute-puppies-wallpaper-hd-1920x1280-free-download.jpg&ehk=3nmucwagTTcT4gHyQHTc7HuhaqAkQRD5r%2bJa3GvROgw%3d&risl=&pid=ImgRaw&r=0', 'chart.jpg');

from PIL import Image

img= Image.open('chart.jpg')

plt.imshow(img);

img_array=np.array(img)

img_array.shape

plt.grid(False)
plt.title("Cute puppies posing")
plt.axis('off')
plt.imshow(img);

plt.grid(False)
plt.axis('off')
plt.imshow(img_array[200:1000, 600:1250]);

## plotting multiple charts
fig, axes=plt.subplots(2,3 , figsize=(16,8))

axes[0,0].plot(years,apples, 's--r')
axes[0,0].plot(years,oranges, 'X--b')
axes[0,0].set_xlabel('Years')
axes[0,0].set_ylabel('Yeild_in_tons per hectare')
axes[0,0].legend(['apples','oranges'])
axes[0,0].set_title("crops yeilds in kanto");

fig, axes = plt.subplots(2, 3, figsize=(16, 8))

# Use the axes for plotting
axes[0,0].plot(years, apples, 's-b')
axes[0,0].plot(years, oranges, 'o--r')
axes[0,0].set_xlabel('Year')
axes[0,0].set_ylabel('Yield (tons per hectare)')
axes[0,0].legend(['Apples', 'Oranges']);
axes[0,0].set_title('Crop Yields in Kanto')

fig, axes = plt.subplots(2, 3, figsize=(16, 8))

# Use the axes for plotting
axes[0,0].plot(years, apples, 's-b')
axes[0,0].plot(years, oranges, 'o--r')
axes[0,0].set_xlabel('Year')
axes[0,0].set_ylabel('Yield (tons per hectare)')
axes[0,0].legend(['Apples', 'Oranges']);
axes[0,0].set_title('Crop Yields in Kanto')

axes[0,1].set_title("sepal length vs sepal width")
sns.scatterplot(x=flowers_df.sepal_length,
                y=flowers_df.sepal_width,
                hue=flowers_df.species,
                s=50,
                ax=axes[0,1]);

fig, axes = plt.subplots(2, 3, figsize=(16, 8))

# Use the axes for plotting
axes[0,0].plot(years, apples, 's-b')
axes[0,0].plot(years, oranges, 'o--r')
axes[0,0].set_xlabel('Year')
axes[0,0].set_ylabel('Yield (tons per hectare)')
axes[0,0].legend(['Apples', 'Oranges']);
axes[0,0].set_title('Crop Yields in Kanto')

axes[0,1].set_title("sepal length vs sepal width")
sns.scatterplot(x=flowers_df.sepal_length,
                y=flowers_df.sepal_width,
                hue=flowers_df.species,
                s=50,
                ax=axes[0,1]);

axes[0,2].set_title("Distribution of sepal width")
axes[0,2].hist([setosa_df.sepal_width,versicolor_df.sepal_width,virginica_df.sepal_width], alpha=0.4, bins=np.arange(1,5,0.25))
axes[0,2].legend(['sertosa','versicolor','virginica']);

fig, axes = plt.subplots(2, 3, figsize=(16, 8))

# Use the axes for plotting
axes[0,0].plot(years, apples, 's-b')
axes[0,0].plot(years, oranges, 'o--r')
axes[0,0].set_xlabel('Year')
axes[0,0].set_ylabel('Yield (tons per hectare)')
axes[0,0].legend(['Apples', 'Oranges']);
axes[0,0].set_title('Crop Yields in Kanto')

axes[0,1].set_title("sepal length vs sepal width")
sns.scatterplot(x=flowers_df.sepal_length,
                y=flowers_df.sepal_width,
                hue=flowers_df.species,
                s=50,
                ax=axes[0,1]);

axes[0,2].set_title("Distribution of sepal width")
axes[0,2].hist([setosa_df.sepal_width,versicolor_df.sepal_width,virginica_df.sepal_width])
axes[0,2].legend(['sertosa','versicolor','virginica']);



axes[1,0].set_title("restaurant bills")
sns.barplot(x='day',y='total_bill', hue='sex', data=tips_df, ax=axes[1,0]);


axes[1,1].set_title("Flight traffic")
sns.heatmap(flights_matrix_df, annot=False, cmap='viridis', ax=axes[1,1]);

axes[1,2].set_title("puppies")
axes[1,2].imshow(img)
axes[1,2].axis('off')
axes[1,2].grid(False);

plt.tight_layout(pad=2);

## pair plots
sns.pairplot(flowers_df, hue='species');

sns.pairplot(tips_df, hue='smoker');

